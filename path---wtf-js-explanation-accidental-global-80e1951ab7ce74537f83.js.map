{"version":3,"sources":["webpack:///path---wtf-js-explanation-accidental-global-80e1951ab7ce74537f83.js","webpack:///./.cache/json/wtf-js-explanation-accidental-global.json"],"names":["webpackJsonp","518","module","exports","data","markdownRemark","html","timeToRead","excerpt","frontmatter","title","cover","date","category","tags","author","fields","slug","prev","next","authors","edges","node","id","name","image","url","bio","pathContext","total"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,8pLAAkvLC,WAAA,EAAAC,QAAA,8IAAoNC,aAAiHC,MAAA,yCAAAC,MAAA,wDAAAC,KAAA,aAAAC,SAAA,cAAAC,MAAA,wCAAAC,OAAA,OAA6NC,QAAWC,KAAA,0CAAgDC,MAASV,QAAA,mHAAAC,aAA4IC,MAAA,yCAAAC,MAAA,6EAAAC,KAAA,cAA0JI,QAAWC,KAAA,2CAAiDE,MAASX,QAAA,+GAAAC,aAAwIC,MAAA,iCAAAC,MAAA,iDAAAC,KAAA,cAAsHI,QAAWC,KAAA,mCAAyCG,SAAYC,QAAUC,MAAQC,GAAA,MAAAC,KAAA,YAAAC,MAAA,8BAAAC,IAAA,6BAAAC,IAAA,6CAAyJC,aAAgBX,KAAA,wCAAAY,MAAA,GAAAX,KAAA,yCAAAC,KAAA","file":"path---wtf-js-explanation-accidental-global-80e1951ab7ce74537f83.js","sourcesContent":["webpackJsonp([3144875602598],{\n\n/***/ 518:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"premise\\\"><a href=\\\"#premise\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Premise</h1>\\n<blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> x <span class=\\\"token operator\\\">=</span> y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// undefined</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 1 -- oops, auto-global!</span>\\n</code></pre>\\n      </div>\\n<p>It's treated like: var x = (y = 1); thus, <code>y=1</code> creates an auto-global since there's no binding <code>var</code> statement for it. Afterwards, that value gets copied into the properly defined local var <code>x</code>.</p>\\n<p>— <cite><a href=\\\"https://wtfjs.com/wtfs/2010-02-15-accidental-global\\\">Accidental global</a></cite></p>\\n</blockquote>\\n<h2 id=\\\"explanation\\\"><a href=\\\"#explanation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Explanation</h2>\\n<p>They even provide an explanation for this phenomenon. Let's go a bit further. How should we define our variables instead so they have the same value?</p>\\n<p>We can define multiple variables by using a comma like this: <code>var a = 1, b = 2;</code>. This way both of them are defined withing the inner scope. Here's the proof:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n        b <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ReferenceError: a is not defined</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>b<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ReferenceError: b is not defined</span>\\n</code></pre>\\n      </div>\\n<p>Now if we stay with the original example, we should define those variables like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n        y <span class=\\\"token operator\\\">=</span> x<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// undefined (actually we get a ReferenceError here)</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// undefined (ReferenceError also. At least we have no global leak)</span>\\n</code></pre>\\n      </div>\",\"timeToRead\":1,\"excerpt\":\"Premise It's treated like: var x = (y = 1); thus,  y=1  creates an auto-global since there's no binding  var  statement for it. Afterwards…\",\"frontmatter\":{\"title\":\"WTF JS explanation - accidental global\",\"cover\":\"https://unsplash.it/1280/900/?random?accidentalglobal\",\"date\":\"03/23/2018\",\"category\":\"explanation\",\"tags\":[\"explanation\",\"js\",\"wtf-js\",\"variable\"],\"author\":\"fil\"},\"fields\":{\"slug\":\"/wtf-js-explanation-accidental-global\"}},\"prev\":{\"excerpt\":\"Declaration comes first In Javascript a declaration is an expression that announces the existence of a variable…\",\"frontmatter\":{\"title\":\"Terminology: declaration vs definition\",\"cover\":\"https://picsum.photos/1280/900/?random%3Fjavascriptdeclarationvsdefinition\",\"date\":\"03/24/2018\"},\"fields\":{\"slug\":\"/terminology-declaration-vs-definition\"}},\"next\":{\"excerpt\":\"In general  Enhanced object literals  are making our lives easier in a way that we can use a more intuitive…\",\"frontmatter\":{\"title\":\"Enhanced object literals - ES6\",\"cover\":\"https://unsplash.it/1280/900/?random?enchanced\",\"date\":\"03/22/2018\"},\"fields\":{\"slug\":\"/enhanced-object-literals-es-6\"}},\"authors\":{\"edges\":[{\"node\":{\"id\":\"fil\",\"name\":\"Fil Flora\",\"image\":\"/blog/images/fil-avatar.png\",\"url\":\"http://nexiuslearning.com/\",\"bio\":\"Front-end developer @ Nexius Learning\"}}]}},\"pathContext\":{\"slug\":\"/wtf-js-explanation-accidental-global\",\"total\":15,\"prev\":\"/terminology-declaration-vs-definition\",\"next\":\"/enhanced-object-literals-es-6\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---wtf-js-explanation-accidental-global-80e1951ab7ce74537f83.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"premise\\\"><a href=\\\"#premise\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Premise</h1>\\n<blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> x <span class=\\\"token operator\\\">=</span> y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// undefined</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 1 -- oops, auto-global!</span>\\n</code></pre>\\n      </div>\\n<p>It's treated like: var x = (y = 1); thus, <code>y=1</code> creates an auto-global since there's no binding <code>var</code> statement for it. Afterwards, that value gets copied into the properly defined local var <code>x</code>.</p>\\n<p>— <cite><a href=\\\"https://wtfjs.com/wtfs/2010-02-15-accidental-global\\\">Accidental global</a></cite></p>\\n</blockquote>\\n<h2 id=\\\"explanation\\\"><a href=\\\"#explanation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Explanation</h2>\\n<p>They even provide an explanation for this phenomenon. Let's go a bit further. How should we define our variables instead so they have the same value?</p>\\n<p>We can define multiple variables by using a comma like this: <code>var a = 1, b = 2;</code>. This way both of them are defined withing the inner scope. Here's the proof:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n        b <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ReferenceError: a is not defined</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>b<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ReferenceError: b is not defined</span>\\n</code></pre>\\n      </div>\\n<p>Now if we stay with the original example, we should define those variables like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n        y <span class=\\\"token operator\\\">=</span> x<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// undefined (actually we get a ReferenceError here)</span>\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// undefined (ReferenceError also. At least we have no global leak)</span>\\n</code></pre>\\n      </div>\",\"timeToRead\":1,\"excerpt\":\"Premise It's treated like: var x = (y = 1); thus,  y=1  creates an auto-global since there's no binding  var  statement for it. Afterwards…\",\"frontmatter\":{\"title\":\"WTF JS explanation - accidental global\",\"cover\":\"https://unsplash.it/1280/900/?random?accidentalglobal\",\"date\":\"03/23/2018\",\"category\":\"explanation\",\"tags\":[\"explanation\",\"js\",\"wtf-js\",\"variable\"],\"author\":\"fil\"},\"fields\":{\"slug\":\"/wtf-js-explanation-accidental-global\"}},\"prev\":{\"excerpt\":\"Declaration comes first In Javascript a declaration is an expression that announces the existence of a variable…\",\"frontmatter\":{\"title\":\"Terminology: declaration vs definition\",\"cover\":\"https://picsum.photos/1280/900/?random%3Fjavascriptdeclarationvsdefinition\",\"date\":\"03/24/2018\"},\"fields\":{\"slug\":\"/terminology-declaration-vs-definition\"}},\"next\":{\"excerpt\":\"In general  Enhanced object literals  are making our lives easier in a way that we can use a more intuitive…\",\"frontmatter\":{\"title\":\"Enhanced object literals - ES6\",\"cover\":\"https://unsplash.it/1280/900/?random?enchanced\",\"date\":\"03/22/2018\"},\"fields\":{\"slug\":\"/enhanced-object-literals-es-6\"}},\"authors\":{\"edges\":[{\"node\":{\"id\":\"fil\",\"name\":\"Fil Flora\",\"image\":\"/blog/images/fil-avatar.png\",\"url\":\"http://nexiuslearning.com/\",\"bio\":\"Front-end developer @ Nexius Learning\"}}]}},\"pathContext\":{\"slug\":\"/wtf-js-explanation-accidental-global\",\"total\":15,\"prev\":\"/terminology-declaration-vs-definition\",\"next\":\"/enhanced-object-literals-es-6\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/wtf-js-explanation-accidental-global.json\n// module id = 518\n// module chunks = 3144875602598"],"sourceRoot":""}