webpackJsonp([0xc929add39c9a],{504:function(n,a){n.exports={data:{markdownRemark:{html:'<h2 id="wtf-js-explanation-for-almost-but-not-quite"><a href="#wtf-js-explanation-for-almost-but-not-quite" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>WTF JS explanation for "Almost but not quite"</h2>\n<h3 id="premise"><a href="#premise" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Premise</h3>\n<blockquote>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">111111111111111111111</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// alerts 111111111111111110000</span>\n</code></pre>\n      </div>\n<p>— <cite><a href="https://wtfjs.com/wtfs/2010-02-12-almost-but-not-quite">wtfjs.com - Almost but not quite</a></cite></p>\n</blockquote>\n<h3 id="explanation"><a href="#explanation" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Explanation</h3>\n<p>JavaScript numbers are 64-bit double values, which are based on the IEEE 754 Standard for Floating-Point Arithmetic. Numbers are stored in a 64 bit binary format, the default output is decimal.</p>\n<p>This means that the maximum safe integer is <code>9007199254740992</code> (which is <code>Math.pow(2, 53)</code>). </p>\n<p>All integers below this number can be represented:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript">Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740992</span>\nMath<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740991</span>\nMath<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740990</span>\n</code></pre>\n      </div>\n<p>Integers greater than that cannot be safely represented:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript">Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740992</span>\nMath<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740992</span>\nMath<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740994</span>\n</code></pre>\n      </div>\n<p>As you can see in the example above the argument of the alert is greater than the <code>Number.Number.MAX_SAFE_INTEGER</code> therefore can not be represented.</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript">Compare<span class="token punctuation">:</span> \n<span class="token number">111111111111111111111</span>\n\nand\n<span class="token number">111111111111111110000</span>\n\nto\n<span class="token number">9007199254740992</span>\n</code></pre>\n      </div>',timeToRead:1,excerpt:'WTF JS explanation for "Almost but not quite" Premise —   wtfjs.com - Almost but not quite Explanation JavaScript numbers are 64-bit double…',frontmatter:{title:"WTF JS explanation - Almost but not quite",cover:"https://unsplash.it/1280/900/?random?almost",date:"03/09/2018",category:"explanation",tags:["explanation","js","wtf-js","default-types"],author:"fil"},fields:{slug:"/wtf-js-explanation-almost-but-not-quite"}},prev:{excerpt:'WTF JS explanation for "parseInt treachery" Premise —   wtfjs.com - parseInt treachery Explanation Because the…',frontmatter:{title:"WTF JS explanation - parseInt treachery",cover:"https://unsplash.it/1280/900/?random?nullisobject",date:"03/17/2018"},fields:{slug:"/wtf-js-explanation-parse-int-treachery"}},next:{excerpt:'WTF JS explanation for "Foonanny" Premise —   wtfjs.com - Foonanny Explanation Strings can not be represented as…',frontmatter:{title:"WTF JS explanation - Foonanny",cover:"https://unsplash.it/1280/900/?random?foonanny",date:"03/09/2018"},fields:{slug:"/wtf-js-explanation-foonanny"}},authors:{edges:[{node:{id:"fil",name:"Fil Flora",image:"/blog/images/fil-avatar.png",url:"http://nexiuslearning.com/",bio:"Front-end developer @ Nexius Learning"}}]}},pathContext:{slug:"/wtf-js-explanation-almost-but-not-quite",total:11,prev:"/wtf-js-explanation-parse-int-treachery",next:"/wtf-js-explanation-foonanny"}}}});
//# sourceMappingURL=path---wtf-js-explanation-almost-but-not-quite-f1f55f30f1b89a45a44f.js.map